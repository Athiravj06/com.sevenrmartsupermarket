<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-26T07:34:06 IST" name="Default suite" finished-at="2024-09-26T07:34:27 IST" duration-ms="21699">
    <groups>
      <group name="Smoke">
        <method signature="LoginTest.verifyLogin()[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2]" name="verifyLogin" class="com.sevenrmartsupermarket.tests.LoginTest"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-09-26T07:34:06 IST" name="Default test" finished-at="2024-09-26T07:34:27 IST" duration-ms="21699">
      <class name="com.sevenrmartsupermarket.tests.LoginTest">
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2]" started-at="2024-09-26T07:34:06 IST" name="launchBrowser" finished-at="2024-09-26T07:34:10 IST" duration-ms="3952" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method signature="verifyLogin()[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2]" started-at="2024-09-26T07:34:10 IST" name="verifyLogin" finished-at="2024-09-26T07:34:19 IST" duration-ms="8972" status="FAIL">
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Error communicating with the remote browser. It may have died.
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c743edcd0487595bddd25e09a9d4acb8, findElement {using=xpath, value=//input[@type='text']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 128.0.6613.138, chrome: {chromedriverVersion: 128.0.6613.137 (fe621c5aa2d..., userDataDir: C:\Users\Athira\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63425}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63425/devtoo..., se:cdpVersion: 128.0.6613.138, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c743edcd0487595bddd25e09a9d4acb8]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c743edcd0487595bddd25e09a9d4acb8, findElement {using=xpath, value=//input[@type='text']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 128.0.6613.138, chrome: {chromedriverVersion: 128.0.6613.137 (fe621c5aa2d..., userDataDir: C:\Users\Athira\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63425}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63425/devtoo..., se:cdpVersion: 128.0.6613.138, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c743edcd0487595bddd25e09a9d4acb8
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.sendKeys(Unknown Source)
at com.sevenrmartsupermarket.pages.LoginPage.enterUserName(LoginPage.java:44)
at com.sevenrmartsupermarket.pages.LoginPage.login(LoginPage.java:70)
at com.sevenrmartsupermarket.tests.LoginTest.verifyLogin(LoginTest.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.io.UncheckedIOException: java.net.SocketException: Connection reset
at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:73)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:48)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:97)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:188)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
... 38 more
Caused by: java.net.SocketException: Connection reset
at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:394)
at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:426)
at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:256)
at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method is-config="true" signature="FailurescreenShot(org.testng.ITestResult)[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2]" started-at="2024-09-26T07:34:19 IST" name="FailurescreenShot" finished-at="2024-09-26T07:34:19 IST" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogin status=FAILURE method=LoginTest.verifyLogin()[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FailurescreenShot -->
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2]" started-at="2024-09-26T07:34:19 IST" name="launchBrowser" finished-at="2024-09-26T07:34:21 IST" duration-ms="1467" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method signature="verifyLoginDataProvider(java.lang.String,java.lang.String)[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2]" started-at="2024-09-26T07:34:21 IST" name="verifyLoginDataProvider" data-provider="loginDetails" finished-at="2024-09-26T07:34:21 IST" duration-ms="637" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginDataProvider -->
        <test-method is-config="true" signature="FailurescreenShot(org.testng.ITestResult)[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2]" started-at="2024-09-26T07:34:21 IST" name="FailurescreenShot" finished-at="2024-09-26T07:34:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginDataProvider status=SUCCESS method=LoginTest.verifyLoginDataProvider(java.lang.String,java.lang.String)[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FailurescreenShot -->
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2]" started-at="2024-09-26T07:34:21 IST" name="launchBrowser" finished-at="2024-09-26T07:34:23 IST" duration-ms="1494" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method signature="verifyLoginDataProvider(java.lang.String,java.lang.String)[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2]" started-at="2024-09-26T07:34:23 IST" name="verifyLoginDataProvider" data-provider="loginDetails" finished-at="2024-09-26T07:34:24 IST" duration-ms="690" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Athira]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[athiravj]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginDataProvider -->
        <test-method is-config="true" signature="FailurescreenShot(org.testng.ITestResult)[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2]" started-at="2024-09-26T07:34:24 IST" name="FailurescreenShot" finished-at="2024-09-26T07:34:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginDataProvider status=SUCCESS method=LoginTest.verifyLoginDataProvider(java.lang.String,java.lang.String)[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FailurescreenShot -->
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2]" started-at="2024-09-26T07:34:24 IST" name="launchBrowser" finished-at="2024-09-26T07:34:25 IST" duration-ms="1412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method signature="verifyLoginDataProvider(java.lang.String,java.lang.String)[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2]" started-at="2024-09-26T07:34:25 IST" name="verifyLoginDataProvider" data-provider="loginDetails" finished-at="2024-09-26T07:34:25 IST" duration-ms="371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Abhiram]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Abhiram@11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginDataProvider -->
        <test-method is-config="true" signature="FailurescreenShot(org.testng.ITestResult)[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2]" started-at="2024-09-26T07:34:25 IST" name="FailurescreenShot" finished-at="2024-09-26T07:34:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginDataProvider status=SUCCESS method=LoginTest.verifyLoginDataProvider(java.lang.String,java.lang.String)[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FailurescreenShot -->
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2]" started-at="2024-09-26T07:34:25 IST" name="launchBrowser" finished-at="2024-09-26T07:34:27 IST" duration-ms="1426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method signature="verifyLoginDataProvider(java.lang.String,java.lang.String)[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2]" started-at="2024-09-26T07:34:27 IST" name="verifyLoginDataProvider" data-provider="loginDetails" finished-at="2024-09-26T07:34:27 IST" duration-ms="503" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TESTNG12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abcd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginDataProvider -->
        <test-method is-config="true" signature="FailurescreenShot(org.testng.ITestResult)[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2]" started-at="2024-09-26T07:34:27 IST" name="FailurescreenShot" finished-at="2024-09-26T07:34:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginDataProvider status=SUCCESS method=LoginTest.verifyLoginDataProvider(java.lang.String,java.lang.String)[pri:0, instance:com.sevenrmartsupermarket.tests.LoginTest@7c9d8e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FailurescreenShot -->
      </class> <!-- com.sevenrmartsupermarket.tests.LoginTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
